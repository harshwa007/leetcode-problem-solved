class Solution {
    public int longestPalindromeSubseq(String s) {
        StringBuilder temp = new StringBuilder(s);

       String s2 = temp.reverse().toString();
        int m = s.length();
        int n = s2.length();
        int dp[][] = new int[m+1][n+1];
        return lcs(s,s2,m,n,dp); 
    }
    public int lcs(String text1, String text2,int m,int n,int dp[][])
    {
        for(int i=1;i<=m;i++)
        {
            for(int j=1;j<=n;j++)
            {
                if(text1.charAt(i-1)==text2.charAt(j-1))
                {
                    dp[i][j] = dp[i-1][j-1]+1;
                }
                else
                {
                    dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[m][n];
    }
}
